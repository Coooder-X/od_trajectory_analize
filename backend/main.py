# print('hello')
import pickle

import numpy as np

from data_process.SpatialRegionTools import cell2coord, inregionT, gpsandtime2cell, cell2vocab, tripandtime2seq, \
    inregionS, gps2cell

import h5py


def read_trip(region):
    trjfiles = ['/home/zhengxuan.lin/project/5月/05月01日/20200501_hz.h5',
                '/home/zhengxuan.lin/project/5月/05月10日/20200510_hz.h5']
    num_out_region = 0  # 超出范围的数据量
    num_del_data = 0
    region.cellcount = []

    total_datas = []
    total_labels = []
    data_l = 0
    for trjfile in trjfiles:
        print(trjfile)
        with h5py.File(trjfile, "r") as f:
            num = f.attrs.get("num")[0]  # 该文件下轨迹数量
            print('该文件下轨迹数量', num)
            data_l += num
            for i in range(1, num + 1):
                trip = f["trips"][str(i)]  # 第 i 条路径
                # print('trip', trip)
                if not (region.min_length <= len(trip) <= region.max_length):
                    num_del_data += 1
                    continue
                cur_trip = []
                if region.needTime:
                    timestamp = f["timestamps"][str(i)]
                    for ((lon, lat), time) in zip(trip, timestamp):
                        if not inregionT(region, lon, lat, time):
                            num_out_region += 1
                        else:
                            cur_trip.append([lon, lat, time])
                else:
                    for (lon, lat) in trip:
                        if not inregionS(region, lon, lat):
                            num_out_region += 1
                        else:
                            cur_trip.append([lon, lat])

                if not (region.min_length <= len(cur_trip) <= region.max_length):
                    num_del_data += 1
                    continue
                # if region.needTime:
                #     for (lon, lat, time) in cur_trip:
                #         # 转到投影坐标系再转到某个cell位置
                #         cell = gpsandtime2cell(region, lon, lat, time)
                #         # 把研究的cellpush
                #         region.cellcount.append(cell)
                # else:
                #     for (lon, lat) in cur_trip:
                #         cell = gps2cell(region, lon, lat)
                #         region.cellcount.append(cell)

                total_datas.append(cur_trip)
                # if region.has_label:
                #     # 存一下标签，之后会打乱
                #     label = f["labels"][str(i)]  # 第 i 条路径
                #     total_labels.append(int(label[()]))

                if (i % 1000 == 1):
                    print("Process file %s: %d/%d trips" % (trjfile, i, num))
    return total_datas


def write_h5(data):
    f = h5py.File("/home/zhengxuan.lin/project/deepcluster/preprocessing/make_data/20200101_jianggan.h5", "w")
    trips_group = f.create_group("trips")
    time_group = f.create_group("timestamps")
    # my_group_1.create_dataset('name', data=np.array([1,2,3,5]))

    print('num =', len(data))
    f.attrs['num'] = [len(data)]
    for i, trip in enumerate(data):
        cur_trip = []
        cur_time = []
        for point in trip:
            p = np.array([point[0], point[1]])
            p = p.astype(float)
            cur_trip.append(p)
            cur_time.append(point[2])

        trip_dataset = trips_group.create_dataset(f'{i+1}', data=np.array(cur_trip))
        trip_dataset[...] = np.array(cur_trip)
        # trips_group[f'{i+1}'] = np.array(cur_trip)
        time_dataset = time_group.create_dataset(f'{i+1}', data=np.array(cur_time))
        time_dataset[...] = np.array(cur_time)
        # time_group[f'{i+1}'] = np.array(cur_time)

    # print('num =', num)
    # f.attrs['num'] = num
    f.close()


if __name__ == '__main__':
    with open("/home/zhengxuan.lin/project/deepcluster/data/region.pkl", 'rb') as file:
        region = pickle.loads(file.read())
    total_datas = read_trip(region)
    print(total_datas[0:10])
    # total_datas = [[[120.28206, 30.337612, 57488], [120.28202, 30.337479, 57518], [120.28202, 30.337467, 57549], [120.28184, 30.336466, 57575], [120.283104, 30.335974, 57605], [120.28359, 30.335838, 57635], [120.28545, 30.33521, 57665], [120.28704, 30.334526, 57696], [120.28667, 30.332212, 57725]], [[119.794426, 30.324717, 60114], [119.79712, 30.32404, 60144], [119.802, 30.324383, 60174], [119.804825, 30.324038, 60219], [119.8085, 30.323717, 60249], [119.81221, 30.324568, 60279], [119.8167, 30.325607, 60309], [119.821915, 30.32557, 60339], [119.82809, 30.325092, 60370], [119.83381, 30.325823, 60400], [119.83864, 30.32864, 60445], [119.84272, 30.330967, 60475], [119.846466, 30.333742, 60505], [119.849594, 30.335197, 60535], [119.85002, 30.33708, 60565], [119.850044, 30.337206, 60595], [119.85008, 30.338665, 60625]], [[120.36652, 30.213814, 61865], [120.35895, 30.213276, 61895], [120.351814, 30.213837, 61925], [120.34454, 30.214872, 61955], [120.333244, 30.216686, 62000], [120.32543, 30.217878, 62030], [120.31894, 30.218758, 62060], [120.31236, 30.219845, 62090], [120.30605, 30.220722, 62120], [120.29916, 30.221851, 62150], [120.29245, 30.222872, 62180], [120.281715, 30.224415, 62225], [120.27448, 30.225542, 62255], [120.26715, 30.22656, 62285], [120.25977, 30.22588, 62315], [120.25314, 30.22373, 62345], [120.24638, 30.221567, 62375], [120.23938, 30.220226, 62405], [120.22868, 30.219984, 62450], [120.222916, 30.222794, 62480], [120.218216, 30.226217, 62510], [120.21431, 30.228989, 62540], [120.21051, 30.231726, 62570], [120.20653, 30.234575, 62601], [120.20254, 30.237436, 62631], [120.19827, 30.24056, 62661], [120.192825, 30.245178, 62706], [120.19038, 30.246368, 62736], [120.18712, 30.248035, 62766], [120.18381, 30.248407, 62796], [120.18058, 30.249285, 62826], [120.18082, 30.251043, 62856], [120.18098, 30.252197, 62886], [120.1767, 30.252565, 62931], [120.17296, 30.252811, 62961], [120.171814, 30.253098, 62991], [120.171165, 30.25317, 63051], [120.16754, 30.253136, 63081], [120.16724, 30.255543, 63126], [120.16713, 30.255802, 63156], [120.16574, 30.256624, 63186], [120.16547, 30.25666, 63216], [120.16338, 30.256586, 63291]], [[120.16107, 30.256487, 63411], [120.1605, 30.25648, 63456], [120.16026, 30.256472, 63516], [120.15948, 30.255312, 63546], [120.159454, 30.254658, 63576], [120.15957, 30.254147, 63621], [120.15962, 30.25404, 63651], [120.15961, 30.253996, 63681], [120.159645, 30.253372, 63711], [120.15718, 30.25338, 63756], [120.15321, 30.263763, 63846], [120.15286, 30.265053, 63891], [120.15281, 30.265236, 63982], [120.15183, 30.268335, 64027], [120.15111, 30.270641, 64057], [120.150566, 30.272593, 64087], [120.15022, 30.273804, 64117], [120.14729, 30.274805, 64162], [120.14259, 30.274355, 64192], [120.138504, 30.274336, 64222], [120.132935, 30.273544, 64267], [120.132866, 30.273542, 64297], [120.12999, 30.273586, 64402], [120.12619, 30.273848, 64432], [120.12606, 30.27385, 64462], [120.12603, 30.273853, 64537], [120.12277, 30.274141, 64567], [120.11949, 30.274817, 64597], [120.11619, 30.274628, 64627], [120.111046, 30.274239, 64672], [120.10683, 30.27255, 64702], [120.10285, 30.270533, 64732], [120.09793, 30.268236, 64777], [120.09786, 30.268208, 64807], [120.09712, 30.267855, 64867], [120.0924, 30.266413, 64912], [120.0889, 30.265512, 64942], [120.08698, 30.265171, 64972], [120.08681, 30.264187, 65107], [120.08704, 30.262815, 65152], [120.08678, 30.263662, 65182], [120.08672, 30.263718, 65945], [120.08683, 30.263906, 65975], [120.08804, 30.260445, 66020], [120.085106, 30.259617, 66050], [120.081474, 30.258497, 66080], [120.07585, 30.25634, 66125], [120.07478, 30.255919, 66155], [120.072685, 30.2554, 66200], [120.06932, 30.25342, 66230], [120.06645, 30.25054, 66260], [120.06307, 30.247831, 66305], [120.05978, 30.246283, 66380], [120.05677, 30.245407, 66410], [120.05238, 30.245071, 66440]], [[120.08355, 30.27945, 35277], [120.08326, 30.280016, 35300], [120.08878, 30.28336, 35390], [120.0966, 30.283905, 35480], [120.108864, 30.284075, 35600], [120.1089, 30.284151, 35630], [120.11307, 30.284403, 35690], [120.11743, 30.284597, 35720], [120.121796, 30.284866, 35750], [120.124115, 30.284822, 35810], [120.124115, 30.284788, 35840], [120.128746, 30.28518, 35900], [120.139, 30.285864, 35990], [120.14674, 30.287163, 36110], [120.14787, 30.287668, 36170], [120.15893, 30.291796, 36320], [120.16015, 30.28996, 36350], [120.16044, 30.289743, 36380], [120.16314, 30.285812, 36440], [120.171776, 30.284332, 36620], [120.18293, 30.28592, 36710], [120.18681, 30.286442, 36740], [120.187195, 30.286465, 36770], [120.18716, 30.286493, 36830], [120.188065, 30.286842, 36860], [120.19208, 30.288113, 36890], [120.194756, 30.2889, 36980], [120.19892, 30.289637, 37010], [120.20202, 30.290962, 37130], [120.203415, 30.291845, 37160]], [[120.174675, 30.216522, 45650], [120.16813, 30.212831, 45710], [120.16779, 30.217707, 45800], [120.16999, 30.219948, 45830], [120.16721, 30.221937, 45860], [120.166084, 30.226585, 45890], [120.16769, 30.241068, 45980], [120.16787, 30.253132, 46070], [120.167404, 30.257933, 46130], [120.167336, 30.25804, 46160], [120.16734, 30.258835, 46220], [120.16728, 30.259054, 46250], [120.16724, 30.258968, 46310], [120.167305, 30.259567, 46370], [120.162415, 30.260265, 46430], [120.159744, 30.260845, 46460], [120.159256, 30.263754, 46490], [120.159134, 30.265596, 46520], [120.159065, 30.265675, 46550], [120.15885, 30.271803, 46670], [120.15884, 30.271786, 46700], [120.157166, 30.27458, 46790], [120.15737, 30.273373, 46850], [120.15713, 30.272898, 46880], [120.15562, 30.27292, 46910]], [[120.18654, 30.284931, 48830], [120.186874, 30.28473, 48860], [120.18643, 30.281504, 48890], [120.18581, 30.278412, 48950], [120.18583, 30.277983, 49010], [120.18642, 30.272364, 49070], [120.186516, 30.268867, 49100], [120.18642, 30.26613, 49130], [120.190216, 30.26585, 49190], [120.1938, 30.266064, 49220], [120.195786, 30.265678, 49250], [120.19569, 30.262552, 49310], [120.195366, 30.260355, 49370], [120.19567, 30.260033, 49460], [120.19637, 30.256931, 49490], [120.196335, 30.254583, 49520], [120.196045, 30.254463, 49550], [120.19626, 30.254173, 49610], [120.195496, 30.250834, 49640], [120.1952, 30.25017, 49730], [120.19707, 30.249207, 49760], [120.20117, 30.248238, 49790], [120.2014, 30.248219, 49820], [120.20264, 30.247673, 49850], [120.19903, 30.241636, 50000], [120.197205, 30.241428, 50030], [120.196686, 30.241966, 50060], [120.196556, 30.24169, 50090], [120.190254, 30.236425, 50180], [120.19022, 30.236427, 50210], [120.19009, 30.236359, 50240], [120.18628, 30.23222, 50330], [120.18425, 30.230453, 50360], [120.183, 30.229418, 50390], [120.18235, 30.228403, 50420], [120.18025, 30.22629, 50450], [120.18068, 30.22593, 50510], [120.18141, 30.224724, 50540]], [[120.14598, 30.205738, 51650], [120.14696, 30.206003, 51710], [120.15448, 30.210245, 51830], [120.1557, 30.210865, 51860], [120.15939, 30.212803, 51890], [120.16201, 30.214186, 51920], [120.16206, 30.21408, 51950], [120.16211, 30.21413, 51980], [120.16289, 30.21464, 52010], [120.16513, 30.215816, 52130], [120.167755, 30.217808, 52160], [120.180504, 30.2337, 52280], [120.18446, 30.237396, 52310], [120.19248, 30.243584, 52370], [120.19523, 30.246386, 52400], [120.19614, 30.25141, 52430], [120.196175, 30.256638, 52460], [120.19601, 30.262178, 52550], [120.19586, 30.26569, 52610], [120.19562, 30.271757, 52670], [120.19544, 30.276644, 52700], [120.19443, 30.287252, 52760], [120.193695, 30.291773, 52790], [120.190895, 30.298956, 52850], [120.18935, 30.305408, 52910], [120.18862, 30.308275, 52940], [120.17914, 30.306133, 53000], [120.174515, 30.304844, 53030], [120.17136, 30.31012, 53090], [120.17137, 30.310413, 53120], [120.17073, 30.312937, 53210], [120.16547, 30.312902, 53270], [120.16493, 30.31416, 53300], [120.16543, 30.315107, 53330], [120.16519, 30.31457, 53420], [120.16486, 30.314363, 53450], [120.16071, 30.312735, 53510]], [[120.160805, 30.31725, 54350], [120.16117, 30.318453, 54410], [120.16418, 30.318422, 54440], [120.16758, 30.318304, 54470], [120.16884, 30.318377, 54500], [120.167885, 30.318583, 54560], [120.16259, 30.31858, 54620], [120.161644, 30.318666, 54680], [120.16159, 30.31857, 54710], [120.15975, 30.319386, 54740], [120.157684, 30.321194, 54770], [120.15415, 30.318048, 54830], [120.150986, 30.314445, 54890], [120.15081, 30.314232, 54920], [120.150826, 30.314217, 54950], [120.149025, 30.312943, 55010], [120.14849, 30.312477, 55040], [120.1492, 30.311504, 55070], [120.149574, 30.309103, 55100], [120.149574, 30.306662, 55130], [120.1501, 30.305462, 55160], [120.15001, 30.304016, 55190], [120.1494, 30.303804, 55220], [120.14936, 30.303793, 55250], [120.150826, 30.301613, 55280], [120.15387, 30.298592, 55310], [120.1549, 30.297611, 55340], [120.15493, 30.297617, 55370], [120.154945, 30.297688, 55400], [120.15583, 30.296408, 55430], [120.15622, 30.295122, 55460], [120.15756, 30.293629, 55490], [120.15867, 30.292143, 55520], [120.15883, 30.292065, 55550], [120.15883, 30.292143, 55580], [120.1592, 30.291422, 55610], [120.16056, 30.289072, 55640], [120.16053, 30.28915, 55670], [120.162186, 30.285997, 55700], [120.163216, 30.283777, 55730], [120.16151, 30.283419, 55760], [120.16144, 30.283476, 55790], [120.16147, 30.283478, 55850], [120.16093, 30.282095, 55880], [120.161095, 30.279537, 55910], [120.161, 30.27939, 55940], [120.161026, 30.279324, 55970], [120.16136, 30.27744, 56000], [120.16145, 30.27727, 56030], [120.16146, 30.277243, 56090], [120.1617, 30.275564, 56120], [120.16178, 30.274483, 56150], [120.16204, 30.272503, 56180], [120.16246, 30.271626, 56210]], [[120.153465, 30.209532, 2701], [120.155495, 30.21078, 2728], [120.15879, 30.212519, 2758], [120.15903, 30.212637, 2788], [120.16221, 30.214323, 2818], [120.16287, 30.214615, 2848], [120.16577, 30.216265, 2908], [120.16933, 30.219196, 2938], [120.16803, 30.220692, 2968], [120.166336, 30.224552, 2998], [120.16577, 30.229683, 3028], [120.166145, 30.234926, 3058], [120.16746, 30.240416, 3088], [120.1677, 30.246027, 3118], [120.167465, 30.251547, 3148], [120.16707, 30.257317, 3178], [120.16704, 30.262793, 3208], [120.16659, 30.268446, 3238], [120.16635, 30.273788, 3268], [120.16578, 30.278732, 3298], [120.16495, 30.282084, 3328], [120.16503, 30.282965, 3358], [120.16547, 30.280172, 3388], [120.16535, 30.279661, 3418]]]
    write_h5(total_datas)

    with h5py.File('/home/zhengxuan.lin/project/deepcluster/preprocessing/make_data/20200101_jianggan.h5', "r") as f:
        num = f.attrs.get("num")[0] # 该文件下轨迹数量
